pipeline {
    agent any
    environment {
        PR_STATUS = sh(script: '''echo ${payload} | jq ".action"''', returnStdout: true).trim()
        PR_NUMBER = sh(script: '''echo ${payload} | jq ".number"''', returnStdout: true).trim()
        PR_BRANCH = sh(script: '''echo ${payload} | jq ".pull_request.head.ref"''', returnStdout: true).trim()
        PROJECT_ID= "searce-playground"
        APP_NAME= "review-app"
    }
    stages {
        stage ('Main Stage') {
            steps { 
                script {
                    if (PR_STATUS.contains("opened") || PR_STATUS.contains("reopened") || PR_STATUS.contains("synchronize") ) {
                        stage("Checkout code") {
                            script {
                                sh 'git checkout -b ${PR_BRANCH}'
                            }
                        }
                        stage("Build image") {
                            script {
                                app = docker.build("gcr.io/${PROJECT_ID}/${APP_NAME}")
                            }
                        }
                        stage("Push image") {
                            script {
                                docker.withRegistry('https://gcr.io', '${env.PROJECT_ID}') {
                                app.push("${GIT_COMMIT}")
                                }  
                            }
                        }
                        stage('Deploy review application') {
                            script {
                                sh "echo 'deploy review'"
                                }
                            }
                    }
                    if (PR_STATUS.contains("closed")) {
                        stage('Destroy review application') {
                            script {
                                sh "echo 'delete review'"
                                }
                            }
                        }
                    }   
                }
            }
        }
    post {
        always {
            deleteDir() /* clean up our workspace */
        }
    }    
}